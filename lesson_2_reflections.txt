What happens when you initialize a repository? Why do you need to do it?
	Git adds hidden .git folder to it.
	Now git keeps track of repository content.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Staging area is an actual folder, more like a waiting area before
	the changes in the files a committed and git creates a "restore point".
	We can add/remove files from it and then when ready do a single commit.

How can you use the staging area to make sure you have one commit per logical
change?
	We can see files in staging area (git status) to be committed and the
	changes in those files which we about to commit into repository.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	When changes are made to TRY a new feature or something else, but a program
	still needs to be functional while experimenting, we can use branches:
	one for stable version, another for tryouts.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
